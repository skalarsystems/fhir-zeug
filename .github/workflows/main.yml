# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
  #  branches: [ master ]
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv1-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      # Code quality
      - name: Code Quality Black
        run: poetry run black . --check

      - name: Code quality Flake8
        run: poetry run flake8 .

      - name: Typing check mypy
        run: poetry run mypy .

      - name: Test with pytest
        run: poetry run pytest --cov=fhirzeug tests -n 2 --cov-report xml

      - name: Code Generation Python
        run: |
          poetry run fhirzeug  --output-directory /tmp/pydantic-fhir --generator python_pydantic
          cd /tmp/pydantic-fhir
          poetry install
          # Check for duplicated classes
          poetry run flake8 --select=F811 pydantic_fhir/r4.py
          poetry run pytest tests

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          fail_ci_if_error: true
